const classToggler={defaultOpt:{classActive:"-active-toggle",classHidden:"-hidden-toggle",attrTarget:"data-toggle-target",attrName:"data-toggle-name",attrClass:"data-toggle-class",attrFocus:"data-toggle-focus",attrAbort:"data-toggle-abort",attrMatch:"data-toggle-match",attrGroup:"data-toggle-group",attrTabs:"data-toggle-tabs",eventNamespace:"ct"},opt:{},init(t){this.opt={...this.defaultOpt,...t},this.initClick(),this.initAbort(),this.initFocus(),this.initGroup(),this.initTabs()},items:(t,e,s="=")=>document.querySelectorAll(`[${t}${e?`${s}'${e}'`:""}]`),togglers(t){return this.items(this.opt.attrTarget,t)},toggles(t){return this.items(this.opt.attrName,t)},initClick(){document.addEventListener("click",t=>{this.togglers().forEach(e=>{if(e.contains(t.target)){const s=e.getAttribute(this.opt.attrMatch);if(s&&!window.matchMedia(s).matches)return;if(e.getAttribute(this.opt.attrTabs)&&this.isClassed(e))return;t.preventDefault(),this.switch(e.getAttribute(this.opt.attrTarget)),document.dispatchEvent(new Event(this.opt.eventNamespace+".toggled"))}})})},resolveClass(t){return t.getAttribute(this.opt.attrClass)||(this.isToggler(t)?this.opt.classActive:this.opt.classHidden)},switch(t){return[...this.togglers(t),...this.toggles(t)].forEach(t=>{t.classList.toggle(this.resolveClass(t)),this.doItemEvent(t)})},doItemEvent(t){t.dispatchEvent(new Event(this.isToggler(t)?`${this.opt.eventNamespace}.button.${this.isClassed(t)?"on":"off"}`:`${this.opt.eventNamespace}.content.${this.isClassed(t)?"hidden":"shown"}`))},isToggler(t){return t.getAttribute(this.opt.attrTarget)},isClassed(t){return t.classList.contains(this.resolveClass(t))},initFocus(){this.items(this.opt.attrFocus).forEach(t=>{t.addEventListener(this.opt.eventNamespace+".content.shown",()=>{t.querySelector(t.getAttribute(this.opt.attrFocus)).focus()})})},initAbort(){document.addEventListener("keydown",t=>27===t.keyCode&&this.hide(this.items(this.opt.attrAbort,"escape","*="))),document.addEventListener("click",t=>this.hide(this.items(this.opt.attrAbort,"clickout","*="),t))},hide(t,e){[...new Set([...t].filter(t=>t.classList.contains(this.resolveClass(t))).map(t=>t.getAttribute(this.opt.attrTarget)).filter(t=>{let s=!1;return[...this.togglers(t),...this.toggles(t)].forEach(t=>!e||!t.contains(e.target)||(s=!0,!1)),!s}))].forEach(t=>this.switch(t))},initGroup(t=this.opt.attrGroup){this.items(t).forEach(e=>{e.addEventListener(this.opt.eventNamespace+".button.on",()=>{const s=[];this.items(t,e.getAttribute(t)).forEach(t=>{const i=t.getAttribute(this.opt.attrTarget);t!==e&&!s.includes(i)&&this.isClassed(t)&&(s.push(i),this.switch(i))})})})},initTabs(){this.initGroup(this.opt.attrTabs)}};export default classToggler;